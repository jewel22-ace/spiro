export default "precision highp float;\n#define GLSLIFY 1\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform vec2 uP1;\nuniform float uTime;\nuniform vec3 uColorP0;\nuniform vec3 uColorP1;\nuniform float uMouseX;\nuniform float uMouseY;\n\nvarying vec2 vP0;\nvarying vec2 vP1;\nvarying vec4 vColorA;\nvarying vec4 vColorB;\nvarying vec4 vColorC;\nvarying vec4 vColorD;\n\nattribute vec3 position;\n\nvoid main() {\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\n  float x = sin( uTime * 2.0 ) + 0.5;\n  x = min(x, 0.15);\n  x += uMouseX / 8.;\n  float y = cos( uTime * 2.0 ) + 0.5;\n  y += uMouseY / 4.;\n\n  vP0 = vec2(x, y);\n  vP1 = vec2(uP1.x, 0.3 + sin( uTime * 2.0 ) / 3.0);\n  vP1.x += uMouseX / 4.;\n\n  // manual\n  vColorA = vec4(uColorP0, 1.0);\n  vColorB = vec4(1.0, 1.0, 1.0, 1.0);\n  vColorC = vec4(uColorP1, 1.0);\n  vColorD = vec4(1.0, 1.0, 1.0, 1.0);\n\n  gl_Position = vec4(projectionMatrix * mvPosition);\n}\n\n  // uv *= 4.91 * 100.;\n  // uv += uTime * uNoise;\n\n  // vec3 textureNoise = vec3(snoise2(uv) * .5 + uNoise);\n  // float maxColor = uMaxColor;\n  // textureNoise.r = clamp(textureNoise.r, 0.0, maxColor);\n  // textureNoise.g = clamp(textureNoise.g, 0.0, maxColor);\n  // textureNoise.b = clamp(textureNoise.b, 0.0, maxColor);\n\n  // gl_FragColor = vec4(textureNoise, 1.);\n\n  // gl_FragColor.r = clamp(gl_FragColor.r, color.r, 1.0);\n  // gl_FragColor.g = clamp(gl_FragColor.g, color.g, 1.0);\n  // gl_FragColor.b = clamp(gl_FragColor.b, color.b, 1.0);\n";